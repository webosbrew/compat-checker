{
  "symbols": [
    "CAAddBlockOption",
    "CAAddBlockOption1",
    "CAAddBlockOption2",
    "CAAddBlockOptionImpl",
    "CAAddBlockSizeOption",
    "CAAddDataToReceiveThread",
    "CAAddDataToSendThread",
    "CAAddNetworkType",
    "CAAddOptionToPDU",
    "CAAddSendThreadQueue",
    "CABlockidMatches",
    "CACentralConnect",
    "CACentralConnectToAll",
    "CACentralStart",
    "CACentralStartDiscovery",
    "CACentralStop",
    "CACentralStopDiscovery",
    "CACheckBlockDataValidation",
    "CACheckBlockErrorType",
    "CACheckBlockOptionType",
    "CACloneCAData",
    "CACloneEndpoint",
    "CACloneInfo",
    "CACloneRequestInfo",
    "CACloneResponseInfo",
    "CAcloseSslConnection",
    "CAcloseSslConnectionAll",
    "CAcloseSslSession",
    "CAConvertAddrToName",
    "CAConvertFormat",
    "CAConvertNameToAddr",
    "CACreateBlockDatablockId",
    "CACreateEndpoint",
    "CACreateEndpointObject",
    "CACreateNewBlockData",
    "CACreateNewBlockMulticastData",
    "CACreateNewDataSet",
    "CACreateNewOptionNode",
    "CAdecryptSsl",
    "CADeInitializeIPGlobals",
    "CAdeinitSslAdapter",
    "CADestroyBlockID",
    "CADestroyDataSet",
    "CADestroyEndpoint",
    "CADestroyErrorInfoInternal",
    "CADestroyRequestInfoInternal",
    "CADestroyResponseInfoInternal",
    "CADestroyToken",
    "CADestroyTokenInternal",
    "CADetachSendMessage",
    "CAEnableAnonECDHCipherSuite",
    "CAencryptSsl",
    "CAFindInterfaceChange",
    "CAFreeEndpoint",
    "CAFreeIPData",
    "CAGattCharacteristicDestroy",
    "CAGattCharacteristicGetProperties",
    "CAGattClientDestroy",
    "CAGattClientInitialize",
    "CAGattClientSendData",
    "CAGattClientSendDataToAll",
    "CAGattDescriptorDestroy",
    "CAGattDescriptorGetProperties",
    "CAGattRecv",
    "CAGattRecvInfoDestroy",
    "CAGattRecvInfoInitialize",
    "CAGattRequestCharacteristicInitialize",
    "CAGattRequestDescriptorInitialize",
    "CAGattResponseCharacteristicInitialize",
    "CAGattResponseDescriptorInitialize",
    "CAGattServerSendResponseNotification",
    "CAGattServerSendResponseNotificationToAll",
    "CAGattServiceDecodeAddress",
    "CAGattServiceDestroy",
    "CAGattServiceInitialize",
    "CAGattServiceMakePeerAddress",
    "CAGenerateHeader",
    "CAGenerateHeaderPayloadLength",
    "CAGenerateOwnerPSK",
    "CAGeneratePDU",
    "CAGeneratePDUImpl",
    "CAGenerateToken",
    "CAGenerateTokenInternal",
    "CAGenerateVariableForFragmentation",
    "CAGetAssignedPortNumber",
    "CAGetBlockDataFromBlockDataList",
    "CAGetBlockMulticastDataFromListWithSeed",
    "CAGetBlockOption",
    "CAGetBlockOptionType",
    "CAGetBlueZInterfaceProxy",
    "CAGetBlueZManagedObjectProxies",
    "CAGetCodeFromPduBinaryData",
    "CAGetDataSetFromBlockDataList",
    "CAGetErrorInfoFromPDU",
    "CAGetInfoFromPDU",
    "CAGetIPInterfaceInformation",
    "CAGetIpv6AddrScope",
    "CAGetIpv6AddrScopeInternal",
    "CAGetLEAdapterState",
    "CAGetLEAddress",
    "CAGetLinkLocalZoneId",
    "CAGetLinkLocalZoneIdInternal",
    "CAGetMessageIdFromPduBinaryData",
    "CAGetMessageTypeFromPduBinaryData",
    "CAGetNetworkInfo",
    "CAGetNetworkInformation",
    "CAGetNetworkInformationInternal",
    "CAGetOptionCount",
    "CAGetOptionData",
    "CAGetPayloadFromBlockDataList",
    "CAGetPayloadInfo",
    "CAGetPollingInterval",
    "CAGetRequestInfoFromPDU",
    "CAGetResponseInfoFromPDU",
    "CAGetSecureEndpointAttributes",
    "CAGetSecureEndpointData",
    "CAGetSelectedNetwork",
    "CAGetSelectedNetworkList",
    "CAGetTokenFromBlockDataList",
    "CAGetTokenFromPDU",
    "caglobals",
    "CAHandleBlockErrorResponse",
    "CAHandleRequestResponse",
    "CAHandleRequestResponseCallbacks",
    "CAInitBlockWiseMutexVariables",
    "CAInitialize",
    "CAInitializeAdapters",
    "CAInitializeBlockWiseTransfer",
    "CAInitializeIP",
    "CAInitializeLE",
    "CAInitializeLEAdapter",
    "CAInitializeLEGattClient",
    "CAInitializeLEGattServer",
    "CAInitializeLENetworkMonitor",
    "CAInitializeMessageHandler",
    "CAInitiateHandshake",
    "CAinitiateSslHandshake",
    "CAinitSslAdapter",
    "CAIPAdapterHandler",
    "CAIPErrorHandler",
    "CAIPGetInterfaceInformation",
    "CAIPIsLocalEndpoint",
    "CAIPPullData",
    "CAIPSendData",
    "CAIPSetErrorHandler",
    "CAIPSetNetworkMonitorCallback",
    "CAIPSetPacketReceiveCallback",
    "CAIPStartListenServer",
    "CAIPStartNetworkMonitor",
    "CAIPStartServer",
    "CAIPStopListenServer",
    "CAIPStopNetworkMonitor",
    "CAIPStopServer",
    "CAIPUnSetNetworkMonitorCallback",
    "CAIsLocalEndpoint",
    "CAIsPayloadLengthInPduWithBlockSizeOption",
    "CAIsSupportedBlockwiseTransfer",
    "CALEAdvertisementDestroy",
    "CALEAdvertisementInitialize",
    "CALogAdapterStateInfo",
    "CALogAdapterTypeInfo",
    "CALogBlockInfo",
    "CALogSendStateInfo",
    "CAMakeFirstDataSegment",
    "CAMakePropertyDictionary",
    "CAMakeRemainDataSegment",
    "CANegotiateBlockSize",
    "CAOrderOpts",
    "CAParseHeader",
    "CAParseHeaderPayloadLength",
    "CAParseHeadOption",
    "CAParsePayloadFormatHeadOption",
    "CAParsePDU",
    "CAParseURI",
    "CAParseUriPartial",
    "CAPeripheralFinalize",
    "CAPeripheralForEachService",
    "CAPeripheralInitialize",
    "CAPeripheralStart",
    "CAPeripheralStop",
    "CAProcessNewInterface",
    "CAProcessNextStep",
    "CAQueueingThreadAddData",
    "CAQueueingThreadDestroy",
    "CAQueueingThreadInitialize",
    "CAQueueingThreadStart",
    "CAQueueingThreadStop",
    "CAReadIPData",
    "CAReceiveBlockWiseData",
    "CAReceiveLastBlock",
    "CAregisterGetCredentialTypesHandler",
    "CARegisterHandler",
    "CARegisterNetworkMonitorHandler",
    "CAregisterPkixInfoHandler",
    "CAregisterPskCredentialsHandler",
    "CAregisterSslHandshakeCallback",
    "CARemoveAllBlockDataFromList",
    "CARemoveAllBlockMulticastDataFromList",
    "CARemoveBlockDataFromList",
    "CARemoveBlockDataFromListWithSeed",
    "CARemoveBlockMulticastDataFromListWithSeed",
    "CARemoveNetworkType",
    "CARetransmissionBaseRoutine",
    "CARetransmissionDestroy",
    "CARetransmissionInitialize",
    "CARetransmissionReceivedData",
    "CARetransmissionSentData",
    "CARetransmissionStart",
    "CARetransmissionStop",
    "CASelectCipherSuite",
    "CASelectNetwork",
    "CASendBlockMessage",
    "CASendBlockWiseData",
    "CASendErrorMessage",
    "CASendIPMulticastData",
    "CASendIPUnicastData",
    "CASendMulticastData",
    "CASendRequest",
    "CASendResponse",
    "CASendUnicastData",
    "CASetAutoConnectionDeviceInfo",
    "CASetBLEClientErrorHandleCallback",
    "CASetBLEServerErrorHandleCallback",
    "CASetBlueZObjectProperty",
    "CAsetCredentialTypesCallback",
    "CASetErrorHandleCallback",
    "CASetInterfaceCallbacks",
    "CASetLEAdapterStateChangedCb",
    "CASetLEClientThreadPoolHandle",
    "CASetLENWConnectionStateChangedCb",
    "CASetLEReqRespClientCallback",
    "CASetLEReqRespServerCallback",
    "CASetLEServerThreadPoolHandle",
    "CASetMoreBitFromBlock",
    "CASetNetworkMonitorCallback",
    "CASetNetworkMonitorCallbacks",
    "CASetNextBlockOption1",
    "CASetNextBlockOption2",
    "CASetPacketReceivedCallback",
    "CAsetPeerCNVerifyCallback",
    "CAsetPkixInfoCallback",
    "CASetPortNumberToAssign",
    "CASetProxyUri",
    "CAsetPskCredentialsCallback",
    "CASetSecureEndpointAttribute",
    "CAsetSslAdapterCallbacks",
    "CAsetSslHandshakeCallback",
    "CAsetTlsCipherSuite",
    "CAsslGenerateOwnerPsk",
    "CAStartAdapter",
    "CAStartDiscoveryServer",
    "CAStartDiscoveryServerAdapters",
    "CAStartIP",
    "CAStartIPDiscoveryServer",
    "CAStartIPListeningServer",
    "CAStartLEAdapter",
    "CAStartLEGattClient",
    "CAStartLEGattServer",
    "CAStartListeningServer",
    "CAStartListeningServerAdapters",
    "CAStopAdapter",
    "CAStopIP",
    "CAStopIPListeningServer",
    "CAStopLEAdapter",
    "CAStopLEGattClient",
    "CAStopLEGattServer",
    "CAStopListeningServer",
    "CAStopListeningServerAdapters",
    "CATerminate",
    "CATerminateAdapters",
    "CATerminateBlockWiseMutexVariables",
    "CATerminateBlockWiseTransfer",
    "CATerminateIP",
    "CATerminateLEGattClient",
    "CATerminateLEGattServer",
    "CATerminateLENetworkMonitor",
    "CATerminateMessageHandler",
    "CATerminateNetworkType",
    "ca_thread_pool_add_task",
    "ca_thread_pool_free",
    "ca_thread_pool_init",
    "ca_thread_pool_pthreads_delegate",
    "CAUnregisterForAddressChanges",
    "CAUnregisterNetworkMonitorHandler",
    "CAUnSelectNetwork",
    "CAUnsetAutoConnectionDeviceInfo",
    "CAUnSetLEAdapterStateChangedCb",
    "CAUnsetNetworkMonitorCallbacks",
    "CAUpdateBlockData",
    "CAUpdateBlockOptionItems",
    "CAUpdateBlockOptionType",
    "CAUpdateCharacteristicsToAllGattClients",
    "CAUpdateCharacteristicsToAllGattServers",
    "CAUpdateCharacteristicsToGattClient",
    "CAUpdateCharacteristicsToGattServer",
    "CAUpdateDataSetFromBlockDataList",
    "CAUpdateMessageId",
    "CAUpdatePayloadData",
    "CAUpdatePayloadToCAData",
    "CAUtilSetBTConfigure",
    "CAUtilSetLogLevel",
    "CAUtilStartLEAdvertising",
    "CAUtilStopLEAdvertising",
    "CAWakeUpForChange",
    "check_segment",
    "checkTimeout",
    "coap_add_block",
    "coap_add_code",
    "coap_add_data",
    "coap_add_length",
    "coap_add_option",
    "coap_add_option2",
    "coap_add_option_later",
    "coap_add_token",
    "coap_add_token2",
    "coap_check_option",
    "coap_clone_uri",
    "coap_decode_var_bytes",
    "coap_delete",
    "coap_delete_list",
    "coap_delete_pdu",
    "coap_encode_var_bytes",
    "coap_error",
    "coap_fls",
    "coap_get_block",
    "coap_get_code",
    "coap_get_data",
    "coap_get_length",
    "coap_get_length_from_header",
    "coap_get_opt_header_length",
    "coap_get_tcp_header_length",
    "coap_get_tcp_header_length_for_transport",
    "coap_get_tcp_header_type_from_initbyte",
    "coap_get_tcp_header_type_from_size",
    "coap_get_token",
    "coap_get_token2",
    "coap_get_total_message_length",
    "coap_hash_impl",
    "coap_hash_path",
    "coap_insert",
    "coap_is_var_bytes",
    "coap_new_listnode",
    "coap_new_pdu2",
    "coap_new_uri",
    "coap_opt_block_num",
    "coap_opt_def",
    "coap_opt_delta",
    "coap_opt_encode",
    "coap_option_iterator_init",
    "coap_option_iterator_init2",
    "coap_option_next",
    "coap_opt_length",
    "coap_opt_parse",
    "coap_opt_setheader",
    "coap_opt_size",
    "coap_opt_value",
    "coap_parse_iterator_init",
    "coap_parse_next",
    "coap_pdu_clear",
    "coap_pdu_clear2",
    "coap_pdu_init",
    "coap_pdu_init2",
    "coap_pdu_parse",
    "coap_pdu_parse2",
    "coap_response_phrase",
    "coap_split_path",
    "coap_split_path_impl",
    "coap_split_query",
    "coap_split_uri",
    "coap_write_block_opt",
    "curve",
    "decode_segment",
    "gatt_characteristic1_call_start_notify",
    "gatt_characteristic1_call_start_notify_finish",
    "gatt_characteristic1_call_start_notify_sync",
    "gatt_characteristic1_call_stop_notify",
    "gatt_characteristic1_call_stop_notify_finish",
    "gatt_characteristic1_call_stop_notify_sync",
    "gatt_characteristic1_call_write_value",
    "gatt_characteristic1_call_write_value_finish",
    "gatt_characteristic1_call_write_value_sync",
    "gatt_characteristic1_complete_start_notify",
    "gatt_characteristic1_complete_stop_notify",
    "gatt_characteristic1_complete_write_value",
    "gatt_characteristic1_dup_descriptors",
    "gatt_characteristic1_dup_flags",
    "gatt_characteristic1_dup_service",
    "gatt_characteristic1_dup_uuid",
    "gatt_characteristic1_dup_value",
    "gatt_characteristic1_get_descriptors",
    "gatt_characteristic1_get_flags",
    "gatt_characteristic1_get_notifying",
    "gatt_characteristic1_get_service",
    "gatt_characteristic1_get_type",
    "gatt_characteristic1_get_uuid",
    "gatt_characteristic1_get_value",
    "gatt_characteristic1_interface_info",
    "gatt_characteristic1_override_properties",
    "gatt_characteristic1_proxy_get_type",
    "gatt_characteristic1_proxy_new",
    "gatt_characteristic1_proxy_new_finish",
    "gatt_characteristic1_proxy_new_for_bus",
    "gatt_characteristic1_proxy_new_for_bus_finish",
    "gatt_characteristic1_proxy_new_for_bus_sync",
    "gatt_characteristic1_proxy_new_sync",
    "gatt_characteristic1_set_descriptors",
    "gatt_characteristic1_set_flags",
    "gatt_characteristic1_set_notifying",
    "gatt_characteristic1_set_service",
    "gatt_characteristic1_set_uuid",
    "gatt_characteristic1_set_value",
    "gatt_characteristic1_skeleton_get_type",
    "gatt_characteristic1_skeleton_new",
    "gatt_descriptor1_call_read_value",
    "gatt_descriptor1_call_read_value_finish",
    "gatt_descriptor1_call_read_value_sync",
    "gatt_descriptor1_complete_read_value",
    "gatt_descriptor1_dup_characteristic",
    "gatt_descriptor1_dup_flags",
    "gatt_descriptor1_dup_uuid",
    "gatt_descriptor1_dup_value",
    "gatt_descriptor1_get_characteristic",
    "gatt_descriptor1_get_flags",
    "gatt_descriptor1_get_type",
    "gatt_descriptor1_get_uuid",
    "gatt_descriptor1_get_value",
    "gatt_descriptor1_interface_info",
    "gatt_descriptor1_override_properties",
    "gatt_descriptor1_proxy_get_type",
    "gatt_descriptor1_proxy_new",
    "gatt_descriptor1_proxy_new_finish",
    "gatt_descriptor1_proxy_new_for_bus",
    "gatt_descriptor1_proxy_new_for_bus_finish",
    "gatt_descriptor1_proxy_new_for_bus_sync",
    "gatt_descriptor1_proxy_new_sync",
    "gatt_descriptor1_set_characteristic",
    "gatt_descriptor1_set_flags",
    "gatt_descriptor1_set_uuid",
    "gatt_descriptor1_set_value",
    "gatt_descriptor1_skeleton_get_type",
    "gatt_descriptor1_skeleton_new",
    "gatt_service1_dup_characteristics",
    "gatt_service1_dup_uuid",
    "gatt_service1_get_characteristics",
    "gatt_service1_get_primary",
    "gatt_service1_get_type",
    "gatt_service1_get_uuid",
    "gatt_service1_interface_info",
    "gatt_service1_override_properties",
    "gatt_service1_proxy_get_type",
    "gatt_service1_proxy_new",
    "gatt_service1_proxy_new_finish",
    "gatt_service1_proxy_new_for_bus",
    "gatt_service1_proxy_new_for_bus_finish",
    "gatt_service1_proxy_new_for_bus_sync",
    "gatt_service1_proxy_new_sync",
    "gatt_service1_set_characteristics",
    "gatt_service1_set_primary",
    "gatt_service1_set_uuid",
    "gatt_service1_skeleton_get_type",
    "gatt_service1_skeleton_new",
    "GetCASecureEndpointAttributes",
    "GetCASecureEndpointData",
    "getRelativeIntervalOfWeek",
    "getRelativeSecondsOfDayofweek",
    "getSeconds",
    "getSecondsFromAbsTime",
    "initThread",
    "leadvertisement1_call_release",
    "leadvertisement1_call_release_finish",
    "leadvertisement1_call_release_sync",
    "leadvertisement1_complete_release",
    "leadvertisement1_dup_manufacturer_data",
    "leadvertisement1_dup_service_data",
    "leadvertisement1_dup_service_uuids",
    "leadvertisement1_dup_solicit_uuids",
    "leadvertisement1_dup_type_",
    "leadvertisement1_get_include_tx_power",
    "leadvertisement1_get_manufacturer_data",
    "leadvertisement1_get_service_data",
    "leadvertisement1_get_service_uuids",
    "leadvertisement1_get_solicit_uuids",
    "leadvertisement1_get_type",
    "leadvertisement1_get_type_",
    "leadvertisement1_interface_info",
    "leadvertisement1_override_properties",
    "leadvertisement1_proxy_get_type",
    "leadvertisement1_proxy_new",
    "leadvertisement1_proxy_new_finish",
    "leadvertisement1_proxy_new_for_bus",
    "leadvertisement1_proxy_new_for_bus_finish",
    "leadvertisement1_proxy_new_for_bus_sync",
    "leadvertisement1_proxy_new_sync",
    "leadvertisement1_set_include_tx_power",
    "leadvertisement1_set_manufacturer_data",
    "leadvertisement1_set_service_data",
    "leadvertisement1_set_service_uuids",
    "leadvertisement1_set_solicit_uuids",
    "leadvertisement1_set_type_",
    "leadvertisement1_skeleton_get_type",
    "leadvertisement1_skeleton_new",
    "loop",
    "make_decoded_option",
    "mbedtls_aes_crypt_cbc",
    "mbedtls_aes_crypt_ctr",
    "mbedtls_aes_crypt_ecb",
    "mbedtls_aes_decrypt",
    "mbedtls_aes_encrypt",
    "mbedtls_aes_free",
    "mbedtls_aes_init",
    "mbedtls_aes_setkey_dec",
    "mbedtls_aes_setkey_enc",
    "mbedtls_asn1_find_named_data",
    "mbedtls_asn1_free_named_data",
    "mbedtls_asn1_free_named_data_list",
    "mbedtls_asn1_get_alg",
    "mbedtls_asn1_get_alg_null",
    "mbedtls_asn1_get_bitstring",
    "mbedtls_asn1_get_bitstring_null",
    "mbedtls_asn1_get_bool",
    "mbedtls_asn1_get_int",
    "mbedtls_asn1_get_len",
    "mbedtls_asn1_get_mpi",
    "mbedtls_asn1_get_sequence_of",
    "mbedtls_asn1_get_tag",
    "mbedtls_asn1_store_named_data",
    "mbedtls_asn1_write_algorithm_identifier",
    "mbedtls_asn1_write_bitstring",
    "mbedtls_asn1_write_bool",
    "mbedtls_asn1_write_ia5_string",
    "mbedtls_asn1_write_int",
    "mbedtls_asn1_write_len",
    "mbedtls_asn1_write_mpi",
    "mbedtls_asn1_write_null",
    "mbedtls_asn1_write_octet_string",
    "mbedtls_asn1_write_oid",
    "mbedtls_asn1_write_printable_string",
    "mbedtls_asn1_write_raw_buffer",
    "mbedtls_asn1_write_tag",
    "mbedtls_base64_decode",
    "mbedtls_base64_encode",
    "mbedtls_ccm_auth_decrypt",
    "mbedtls_ccm_encrypt_and_tag",
    "mbedtls_ccm_free",
    "mbedtls_ccm_init",
    "mbedtls_ccm_setkey",
    "mbedtls_cipher_auth_decrypt",
    "mbedtls_cipher_auth_encrypt",
    "mbedtls_cipher_check_tag",
    "mbedtls_cipher_crypt",
    "mbedtls_cipher_definitions",
    "mbedtls_cipher_finish",
    "mbedtls_cipher_free",
    "mbedtls_cipher_info_from_string",
    "mbedtls_cipher_info_from_type",
    "mbedtls_cipher_info_from_values",
    "mbedtls_cipher_init",
    "mbedtls_cipher_list",
    "mbedtls_cipher_reset",
    "mbedtls_cipher_set_iv",
    "mbedtls_cipher_setkey",
    "mbedtls_cipher_set_padding_mode",
    "mbedtls_cipher_setup",
    "mbedtls_cipher_supported",
    "mbedtls_cipher_update",
    "mbedtls_cipher_update_ad",
    "mbedtls_cipher_write_tag",
    "mbedtls_ctr_drbg_free",
    "mbedtls_ctr_drbg_init",
    "mbedtls_ctr_drbg_random",
    "mbedtls_ctr_drbg_random_with_add",
    "mbedtls_ctr_drbg_reseed",
    "mbedtls_ctr_drbg_seed",
    "mbedtls_ctr_drbg_seed_entropy_len",
    "mbedtls_ctr_drbg_set_entropy_len",
    "mbedtls_ctr_drbg_set_prediction_resistance",
    "mbedtls_ctr_drbg_set_reseed_interval",
    "mbedtls_ctr_drbg_update",
    "mbedtls_ctr_drbg_update_seed_file",
    "mbedtls_ctr_drbg_write_seed_file",
    "mbedtls_debug_print_buf",
    "mbedtls_debug_print_crt",
    "mbedtls_debug_print_ecp",
    "mbedtls_debug_print_mpi",
    "mbedtls_debug_print_msg",
    "mbedtls_debug_print_ret",
    "mbedtls_debug_set_threshold",
    "mbedtls_ecdh_calc_secret",
    "mbedtls_ecdh_compute_shared",
    "mbedtls_ecdh_free",
    "mbedtls_ecdh_gen_public",
    "mbedtls_ecdh_get_params",
    "mbedtls_ecdh_init",
    "mbedtls_ecdh_make_params",
    "mbedtls_ecdh_make_public",
    "mbedtls_ecdh_read_params",
    "mbedtls_ecdh_read_public",
    "mbedtls_ecdsa_free",
    "mbedtls_ecdsa_from_keypair",
    "mbedtls_ecdsa_genkey",
    "mbedtls_ecdsa_info",
    "mbedtls_ecdsa_init",
    "mbedtls_ecdsa_read_signature",
    "mbedtls_ecdsa_sign",
    "mbedtls_ecdsa_sign_det",
    "mbedtls_ecdsa_verify",
    "mbedtls_ecdsa_write_signature",
    "mbedtls_eckeydh_info",
    "mbedtls_eckey_info",
    "mbedtls_ecp_check_privkey",
    "mbedtls_ecp_check_pubkey",
    "mbedtls_ecp_check_pub_priv",
    "mbedtls_ecp_copy",
    "mbedtls_ecp_curve_info_from_grp_id",
    "mbedtls_ecp_curve_info_from_name",
    "mbedtls_ecp_curve_info_from_tls_id",
    "mbedtls_ecp_curve_list",
    "mbedtls_ecp_gen_key",
    "mbedtls_ecp_gen_keypair",
    "mbedtls_ecp_gen_keypair_base",
    "mbedtls_ecp_group_copy",
    "mbedtls_ecp_group_free",
    "mbedtls_ecp_group_init",
    "mbedtls_ecp_group_load",
    "mbedtls_ecp_grp_id_list",
    "mbedtls_ecp_is_zero",
    "mbedtls_ecp_keypair_free",
    "mbedtls_ecp_keypair_init",
    "mbedtls_ecp_mul",
    "mbedtls_ecp_muladd",
    "mbedtls_ecp_point_cmp",
    "mbedtls_ecp_point_free",
    "mbedtls_ecp_point_init",
    "mbedtls_ecp_point_read_binary",
    "mbedtls_ecp_point_read_string",
    "mbedtls_ecp_point_write_binary",
    "mbedtls_ecp_set_zero",
    "mbedtls_ecp_tls_read_group",
    "mbedtls_ecp_tls_read_point",
    "mbedtls_ecp_tls_write_group",
    "mbedtls_ecp_tls_write_point",
    "mbedtls_entropy_add_source",
    "mbedtls_entropy_free",
    "mbedtls_entropy_func",
    "mbedtls_entropy_gather",
    "mbedtls_entropy_init",
    "mbedtls_entropy_update_manual",
    "mbedtls_entropy_update_seed_file",
    "mbedtls_entropy_write_seed_file",
    "mbedtls_gcm_auth_decrypt",
    "mbedtls_gcm_crypt_and_tag",
    "mbedtls_gcm_finish",
    "mbedtls_gcm_free",
    "mbedtls_gcm_init",
    "mbedtls_gcm_setkey",
    "mbedtls_gcm_starts",
    "mbedtls_gcm_update",
    "mbedtls_hardclock_poll",
    "mbedtls_hmac_drbg_free",
    "mbedtls_hmac_drbg_init",
    "mbedtls_hmac_drbg_random",
    "mbedtls_hmac_drbg_random_with_add",
    "mbedtls_hmac_drbg_reseed",
    "mbedtls_hmac_drbg_seed",
    "mbedtls_hmac_drbg_seed_buf",
    "mbedtls_hmac_drbg_set_entropy_len",
    "mbedtls_hmac_drbg_set_prediction_resistance",
    "mbedtls_hmac_drbg_set_reseed_interval",
    "mbedtls_hmac_drbg_update",
    "mbedtls_hmac_drbg_update_seed_file",
    "mbedtls_hmac_drbg_write_seed_file",
    "mbedtls_md",
    "mbedtls_md_clone",
    "mbedtls_md_file",
    "mbedtls_md_finish",
    "mbedtls_md_free",
    "mbedtls_md_get_name",
    "mbedtls_md_get_size",
    "mbedtls_md_get_type",
    "mbedtls_md_hmac",
    "mbedtls_md_hmac_finish",
    "mbedtls_md_hmac_reset",
    "mbedtls_md_hmac_starts",
    "mbedtls_md_hmac_update",
    "mbedtls_md_info_from_string",
    "mbedtls_md_info_from_type",
    "mbedtls_md_init",
    "mbedtls_md_list",
    "mbedtls_md_process",
    "mbedtls_md_setup",
    "mbedtls_md_starts",
    "mbedtls_md_update",
    "mbedtls_mpi_add_abs",
    "mbedtls_mpi_add_int",
    "mbedtls_mpi_add_mpi",
    "mbedtls_mpi_bitlen",
    "mbedtls_mpi_cmp_abs",
    "mbedtls_mpi_cmp_int",
    "mbedtls_mpi_cmp_mpi",
    "mbedtls_mpi_copy",
    "mbedtls_mpi_div_int",
    "mbedtls_mpi_div_mpi",
    "mbedtls_mpi_exp_mod",
    "mbedtls_mpi_fill_random",
    "mbedtls_mpi_free",
    "mbedtls_mpi_gcd",
    "mbedtls_mpi_get_bit",
    "mbedtls_mpi_grow",
    "mbedtls_mpi_init",
    "mbedtls_mpi_inv_mod",
    "mbedtls_mpi_lsb",
    "mbedtls_mpi_lset",
    "mbedtls_mpi_mod_int",
    "mbedtls_mpi_mod_mpi",
    "mbedtls_mpi_mul_int",
    "mbedtls_mpi_mul_mpi",
    "mbedtls_mpi_read_binary",
    "mbedtls_mpi_read_file",
    "mbedtls_mpi_read_string",
    "mbedtls_mpi_safe_cond_assign",
    "mbedtls_mpi_safe_cond_swap",
    "mbedtls_mpi_set_bit",
    "mbedtls_mpi_shift_l",
    "mbedtls_mpi_shift_r",
    "mbedtls_mpi_shrink",
    "mbedtls_mpi_size",
    "mbedtls_mpi_sub_abs",
    "mbedtls_mpi_sub_int",
    "mbedtls_mpi_sub_mpi",
    "mbedtls_mpi_swap",
    "mbedtls_mpi_write_binary",
    "mbedtls_mpi_write_file",
    "mbedtls_mpi_write_string",
    "mbedtls_oid_get_attr_short_name",
    "mbedtls_oid_get_cipher_alg",
    "mbedtls_oid_get_ec_grp",
    "mbedtls_oid_get_extended_key_usage",
    "mbedtls_oid_get_md_alg",
    "mbedtls_oid_get_numeric_string",
    "mbedtls_oid_get_oid_by_ec_grp",
    "mbedtls_oid_get_oid_by_md",
    "mbedtls_oid_get_oid_by_pk_alg",
    "mbedtls_oid_get_oid_by_sig_alg",
    "mbedtls_oid_get_pk_alg",
    "mbedtls_oid_get_sig_alg",
    "mbedtls_oid_get_sig_alg_desc",
    "mbedtls_oid_get_x509_ext_type",
    "mbedtls_pem_free",
    "mbedtls_pem_init",
    "mbedtls_pem_read_buffer",
    "mbedtls_pem_write_buffer",
    "mbedtls_pk_can_do",
    "mbedtls_pk_check_pair",
    "mbedtls_pkcs5_pbes2",
    "mbedtls_pkcs5_pbkdf2_hmac",
    "mbedtls_pk_debug",
    "mbedtls_pk_decrypt",
    "mbedtls_pk_encrypt",
    "mbedtls_pk_free",
    "mbedtls_pk_get_bitlen",
    "mbedtls_pk_get_name",
    "mbedtls_pk_get_type",
    "mbedtls_pk_info_from_type",
    "mbedtls_pk_init",
    "mbedtls_pk_load_file",
    "mbedtls_pk_parse_key",
    "mbedtls_pk_parse_keyfile",
    "mbedtls_pk_parse_public_key",
    "mbedtls_pk_parse_public_keyfile",
    "mbedtls_pk_parse_subpubkey",
    "mbedtls_pk_setup",
    "mbedtls_pk_sign",
    "mbedtls_pk_verify",
    "mbedtls_pk_verify_ext",
    "mbedtls_pk_write_key_der",
    "mbedtls_pk_write_key_pem",
    "mbedtls_pk_write_pubkey",
    "mbedtls_pk_write_pubkey_der",
    "mbedtls_pk_write_pubkey_pem",
    "mbedtls_platform_entropy_poll",
    "mbedtls_rsa_check_privkey",
    "mbedtls_rsa_check_pubkey",
    "mbedtls_rsa_check_pub_priv",
    "mbedtls_rsa_copy",
    "mbedtls_rsa_free",
    "mbedtls_rsa_info",
    "mbedtls_rsa_init",
    "mbedtls_rsa_pkcs1_decrypt",
    "mbedtls_rsa_pkcs1_encrypt",
    "mbedtls_rsa_pkcs1_sign",
    "mbedtls_rsa_pkcs1_verify",
    "mbedtls_rsa_private",
    "mbedtls_rsa_public",
    "mbedtls_rsa_rsaes_oaep_decrypt",
    "mbedtls_rsa_rsaes_oaep_encrypt",
    "mbedtls_rsa_rsaes_pkcs1_v15_decrypt",
    "mbedtls_rsa_rsaes_pkcs1_v15_encrypt",
    "mbedtls_rsa_rsassa_pkcs1_v15_sign",
    "mbedtls_rsa_rsassa_pkcs1_v15_verify",
    "mbedtls_rsa_rsassa_pss_sign",
    "mbedtls_rsa_rsassa_pss_verify",
    "mbedtls_rsa_rsassa_pss_verify_ext",
    "mbedtls_rsa_set_padding",
    "mbedtls_set_alarm",
    "mbedtls_sha1",
    "mbedtls_sha1_clone",
    "mbedtls_sha1_finish",
    "mbedtls_sha1_free",
    "mbedtls_sha1_info",
    "mbedtls_sha1_init",
    "mbedtls_sha1_process",
    "mbedtls_sha1_starts",
    "mbedtls_sha1_update",
    "mbedtls_sha224_info",
    "mbedtls_sha256",
    "mbedtls_sha256_clone",
    "mbedtls_sha256_finish",
    "mbedtls_sha256_free",
    "mbedtls_sha256_info",
    "mbedtls_sha256_init",
    "mbedtls_sha256_process",
    "mbedtls_sha256_starts",
    "mbedtls_sha256_update",
    "mbedtls_sha384_info",
    "mbedtls_sha512",
    "mbedtls_sha512_clone",
    "mbedtls_sha512_finish",
    "mbedtls_sha512_free",
    "mbedtls_sha512_info",
    "mbedtls_sha512_init",
    "mbedtls_sha512_process",
    "mbedtls_sha512_starts",
    "mbedtls_sha512_update",
    "mbedtls_ssl_check_cert_usage",
    "mbedtls_ssl_check_curve",
    "mbedtls_ssl_check_sig_hash",
    "mbedtls_ssl_ciphersuite_from_id",
    "mbedtls_ssl_ciphersuite_from_string",
    "mbedtls_ssl_ciphersuite_uses_ec",
    "mbedtls_ssl_ciphersuite_uses_psk",
    "mbedtls_ssl_close_notify",
    "mbedtls_ssl_conf_authmode",
    "mbedtls_ssl_conf_ca_chain",
    "mbedtls_ssl_conf_cert_profile",
    "mbedtls_ssl_conf_ciphersuites",
    "mbedtls_ssl_conf_ciphersuites_for_version",
    "mbedtls_ssl_conf_curves",
    "mbedtls_ssl_conf_dbg",
    "mbedtls_ssl_conf_dtls_anti_replay",
    "mbedtls_ssl_conf_dtls_badmac_limit",
    "mbedtls_ssl_conf_dtls_cookies",
    "mbedtls_ssl_conf_ekus",
    "mbedtls_ssl_conf_encrypt_then_mac",
    "mbedtls_ssl_conf_endpoint",
    "mbedtls_ssl_conf_export_keys_cb",
    "mbedtls_ssl_conf_extended_master_secret",
    "mbedtls_ssl_conf_fallback",
    "mbedtls_ssl_conf_handshake_timeout",
    "mbedtls_ssl_config_defaults",
    "mbedtls_ssl_config_free",
    "mbedtls_ssl_config_init",
    "mbedtls_ssl_conf_legacy_renegotiation",
    "mbedtls_ssl_conf_max_frag_len",
    "mbedtls_ssl_conf_max_version",
    "mbedtls_ssl_conf_min_version",
    "mbedtls_ssl_conf_own_cert",
    "mbedtls_ssl_conf_psk",
    "mbedtls_ssl_conf_psk_cb",
    "mbedtls_ssl_conf_read_timeout",
    "mbedtls_ssl_conf_rng",
    "mbedtls_ssl_conf_session_cache",
    "mbedtls_ssl_conf_sig_hashes",
    "mbedtls_ssl_conf_transport",
    "mbedtls_ssl_conf_verify",
    "mbedtls_ssl_cookie_check",
    "mbedtls_ssl_cookie_free",
    "mbedtls_ssl_cookie_init",
    "mbedtls_ssl_cookie_set_timeout",
    "mbedtls_ssl_cookie_setup",
    "mbedtls_ssl_cookie_write",
    "mbedtls_ssl_derive_keys",
    "mbedtls_ssl_dtls_replay_check",
    "mbedtls_ssl_dtls_replay_update",
    "mbedtls_ssl_fetch_input",
    "mbedtls_ssl_flush_output",
    "mbedtls_ssl_free",
    "mbedtls_ssl_get_bytes_avail",
    "mbedtls_ssl_get_ciphersuite",
    "mbedtls_ssl_get_ciphersuite_id",
    "mbedtls_ssl_get_ciphersuite_name",
    "mbedtls_ssl_get_ciphersuite_sig_pk_alg",
    "mbedtls_ssl_get_max_frag_len",
    "mbedtls_ssl_get_peer_cert",
    "mbedtls_ssl_get_record_expansion",
    "mbedtls_ssl_get_session",
    "mbedtls_ssl_get_verify_result",
    "mbedtls_ssl_get_version",
    "mbedtls_ssl_handle_message_type",
    "mbedtls_ssl_handshake",
    "mbedtls_ssl_handshake_client_step",
    "mbedtls_ssl_handshake_free",
    "mbedtls_ssl_handshake_server_step",
    "mbedtls_ssl_handshake_step",
    "mbedtls_ssl_handshake_wrapup",
    "mbedtls_ssl_hash_from_md_alg",
    "mbedtls_ssl_init",
    "mbedtls_ssl_list_ciphersuites",
    "mbedtls_ssl_md_alg_from_hash",
    "mbedtls_ssl_optimize_checksum",
    "mbedtls_ssl_parse_certificate",
    "mbedtls_ssl_parse_change_cipher_spec",
    "mbedtls_ssl_parse_finished",
    "mbedtls_ssl_pk_alg_from_sig",
    "mbedtls_ssl_prepare_handshake_record",
    "mbedtls_ssl_psk_derive_premaster",
    "mbedtls_ssl_read",
    "mbedtls_ssl_read_record",
    "mbedtls_ssl_read_record_layer",
    "mbedtls_ssl_read_version",
    "mbedtls_ssl_recv_flight_completed",
    "mbedtls_ssl_resend",
    "mbedtls_ssl_reset_checksum",
    "mbedtls_ssl_send_alert_message",
    "mbedtls_ssl_send_fatal_handshake_failure",
    "mbedtls_ssl_send_flight_completed",
    "mbedtls_ssl_session_free",
    "mbedtls_ssl_session_init",
    "mbedtls_ssl_session_reset",
    "mbedtls_ssl_set_bio",
    "mbedtls_ssl_set_calc_verify_md",
    "mbedtls_ssl_set_client_transport_id",
    "mbedtls_ssl_set_hostname",
    "mbedtls_ssl_set_hs_psk",
    "mbedtls_ssl_set_session",
    "mbedtls_ssl_set_timer_cb",
    "mbedtls_ssl_setup",
    "mbedtls_ssl_sig_from_pk",
    "mbedtls_ssl_transform_free",
    "mbedtls_ssl_update_handshake_status",
    "mbedtls_ssl_write",
    "mbedtls_ssl_write_certificate",
    "mbedtls_ssl_write_change_cipher_spec",
    "mbedtls_ssl_write_finished",
    "mbedtls_ssl_write_record",
    "mbedtls_ssl_write_version",
    "mbedtls_timing_alarmed",
    "mbedtls_timing_get_delay",
    "mbedtls_timing_get_timer",
    "mbedtls_timing_hardclock",
    "mbedtls_timing_set_delay",
    "mbedtls_x509_crl_free",
    "mbedtls_x509_crl_info",
    "mbedtls_x509_crl_init",
    "mbedtls_x509_crl_parse",
    "mbedtls_x509_crl_parse_der",
    "mbedtls_x509_crl_parse_file",
    "mbedtls_x509_crt_check_extended_key_usage",
    "mbedtls_x509_crt_check_key_usage",
    "mbedtls_x509_crt_free",
    "mbedtls_x509_crt_info",
    "mbedtls_x509_crt_init",
    "mbedtls_x509_crt_is_revoked",
    "mbedtls_x509_crt_parse",
    "mbedtls_x509_crt_parse_der",
    "mbedtls_x509_crt_parse_file",
    "mbedtls_x509_crt_parse_path",
    "mbedtls_x509_crt_profile_default",
    "mbedtls_x509_crt_profile_next",
    "mbedtls_x509_crt_profile_suiteb",
    "mbedtls_x509_crt_verify",
    "mbedtls_x509_crt_verify_info",
    "mbedtls_x509_crt_verify_with_profile",
    "mbedtls_x509_dn_gets",
    "mbedtls_x509_get_alg",
    "mbedtls_x509_get_alg_null",
    "mbedtls_x509_get_ext",
    "mbedtls_x509_get_name",
    "mbedtls_x509_get_rsassa_pss_params",
    "mbedtls_x509_get_serial",
    "mbedtls_x509_get_sig",
    "mbedtls_x509_get_sig_alg",
    "mbedtls_x509_get_time",
    "mbedtls_x509_key_size_helper",
    "mbedtls_x509_serial_gets",
    "mbedtls_x509_sig_alg_gets",
    "mbedtls_x509_time_is_future",
    "mbedtls_x509_time_is_past",
    "NewCacheMessage",
    "object_manager_call_get_managed_objects",
    "object_manager_call_get_managed_objects_finish",
    "object_manager_call_get_managed_objects_sync",
    "object_manager_complete_get_managed_objects",
    "object_manager_emit_interfaces_added",
    "object_manager_emit_interfaces_removed",
    "object_manager_get_type",
    "object_manager_interface_info",
    "object_manager_override_properties",
    "object_manager_proxy_get_type",
    "object_manager_proxy_new",
    "object_manager_proxy_new_finish",
    "object_manager_proxy_new_for_bus",
    "object_manager_proxy_new_for_bus_finish",
    "object_manager_proxy_new_for_bus_sync",
    "object_manager_proxy_new_sync",
    "object_manager_skeleton_get_type",
    "object_manager_skeleton_new",
    "oc_add_microseconds_to_timespec",
    "oc_cond_broadcast",
    "oc_cond_free",
    "oc_cond_new",
    "oc_cond_signal",
    "oc_cond_wait",
    "oc_cond_wait_for",
    "OCConvertStringToUuid",
    "OCConvertUuidToString",
    "OCGenerateUuid",
    "oc_get_current_time",
    "OCGetRandom",
    "OCGetRandomBytes",
    "OCGetRandomRange",
    "OCIsUUID",
    "OCLog",
    "OCLogBuffer",
    "OCLogConfig",
    "OCLogInit",
    "OCLogShutdown",
    "OCLogv",
    "oc_mutex_assert_owner",
    "oc_mutex_free",
    "oc_mutex_lock",
    "oc_mutex_new",
    "oc_mutex_new_recursive",
    "oc_mutex_unlock",
    "OCSetLogLevel",
    "oc_thread_free",
    "oc_thread_new",
    "oc_thread_wait",
    "OICCalloc",
    "OICClearMemory",
    "OICFree",
    "OICFreeAndSetToNull",
    "OICGetCurrentTime",
    "OICMalloc",
    "OICRealloc",
    "OICStrcat",
    "OICStrcatPartial",
    "OICStrcpy",
    "OICStrcpyPartial",
    "OICStrdup",
    "OICStringToLower",
    "options_start",
    "registerTimer",
    "SetCASecureEndpointAttribute",
    "thread_id",
    "timeout_list",
    "timespec_add",
    "timespec_diff",
    "u_arraylist_add",
    "u_arraylist_contains",
    "u_arraylist_create",
    "u_arraylist_destroy",
    "u_arraylist_free",
    "u_arraylist_get",
    "u_arraylist_get_index",
    "u_arraylist_length",
    "u_arraylist_remove",
    "u_arraylist_reserve",
    "u_arraylist_shrink_to_fit",
    "u_linklist_add",
    "u_linklist_add_head",
    "u_linklist_create",
    "u_linklist_free",
    "u_linklist_get_data",
    "u_linklist_get_next",
    "u_linklist_init_iterator",
    "u_linklist_length",
    "u_linklist_remove",
    "unregisterTimer",
    "u_queue_add_element",
    "u_queue_create",
    "u_queue_delete",
    "u_queue_get_element",
    "u_queue_get_head",
    "u_queue_get_size",
    "u_queue_remove_element",
    "u_queue_reset",
    "write_option"
  ],
  "needed": [
    "libpthread.so.0",
    "librt.so.1",
    "libgio-2.0.so.0",
    "libgobject-2.0.so.0",
    "libglib-2.0.so.0",
    "libgcc_s.so.1",
    "libc.so.6"
  ],
  "names": [
    "libconnectivity_abstraction.so"
  ]
}